{"version":3,"file":"LayersPanel.js","sourceRoot":"","sources":["../../../../../front_end/layers/LayersPanel.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../common/common.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as LayerViewer from '../layer_viewer/layer_viewer.js';\nimport * as SDK from '../sdk/sdk.js';  // eslint-disable-line no-unused-vars\nimport * as UI from '../ui/ui.js';\n\nimport {LayerPaintProfilerView} from './LayerPaintProfilerView.js';\nimport {Events, LayerTreeModel} from './LayerTreeModel.js';\n\nexport const UIStrings = {\n  /**\n  *@description Text for the details of something\n  */\n  details: 'Details',\n  /**\n  *@description Title of the Profiler tool\n  */\n  profiler: 'Profiler',\n};\nconst str_ = i18n.i18n.registerUIStrings('layers/LayersPanel.js', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n/**\n * @implements {SDK.SDKModel.Observer}\n */\nexport class LayersPanel extends UI.Panel.PanelWithSidebar {\n  constructor() {\n    super('layers', 225);\n    /** @type {?LayerTreeModel} */\n    this._model = null;\n\n    SDK.SDKModel.TargetManager.instance().observeTargets(this);\n    this._layerViewHost = new LayerViewer.LayerViewHost.LayerViewHost();\n    this._layerTreeOutline = new LayerViewer.LayerTreeOutline.LayerTreeOutline(this._layerViewHost);\n    this._layerTreeOutline.addEventListener(\n        LayerViewer.LayerTreeOutline.Events.PaintProfilerRequested, this._onPaintProfileRequested, this);\n    this.panelSidebarElement().appendChild(this._layerTreeOutline.element);\n    this.setDefaultFocusedElement(this._layerTreeOutline.element);\n\n    this._rightSplitWidget = new UI.SplitWidget.SplitWidget(false, true, 'layerDetailsSplitViewState');\n    this.splitWidget().setMainWidget(this._rightSplitWidget);\n\n    this._layers3DView = new LayerViewer.Layers3DView.Layers3DView(this._layerViewHost);\n    this._rightSplitWidget.setMainWidget(this._layers3DView);\n    this._layers3DView.addEventListener(\n        LayerViewer.Layers3DView.Events.PaintProfilerRequested, this._onPaintProfileRequested, this);\n    this._layers3DView.addEventListener(LayerViewer.Layers3DView.Events.ScaleChanged, this._onScaleChanged, this);\n\n    this._tabbedPane = new UI.TabbedPane.TabbedPane();\n    this._rightSplitWidget.setSidebarWidget(this._tabbedPane);\n\n    this._layerDetailsView = new LayerViewer.LayerDetailsView.LayerDetailsView(this._layerViewHost);\n    this._layerDetailsView.addEventListener(\n        LayerViewer.LayerDetailsView.Events.PaintProfilerRequested, this._onPaintProfileRequested, this);\n    this._tabbedPane.appendTab(DetailsViewTabs.Details, i18nString(UIStrings.details), this._layerDetailsView);\n\n    this._paintProfilerView = new LayerPaintProfilerView(this._showImage.bind(this));\n    this._tabbedPane.addEventListener(UI.TabbedPane.Events.TabClosed, this._onTabClosed, this);\n    this._updateThrottler = new Common.Throttler.Throttler(100);\n  }\n\n  /**\n   * @override\n   */\n  focus() {\n    this._layerTreeOutline.focus();\n  }\n\n  /**\n   * @override\n   */\n  wasShown() {\n    super.wasShown();\n    if (this._model) {\n      this._model.enable();\n    }\n  }\n\n  /**\n   * @override\n   */\n  willHide() {\n    if (this._model) {\n      this._model.disable();\n    }\n    super.willHide();\n  }\n\n  /**\n   * @override\n   * @param {!SDK.SDKModel.Target} target\n   */\n  targetAdded(target) {\n    if (this._model) {\n      return;\n    }\n    this._model = target.model(LayerTreeModel);\n    if (!this._model) {\n      return;\n    }\n    this._model.addEventListener(Events.LayerTreeChanged, this._onLayerTreeUpdated, this);\n    this._model.addEventListener(Events.LayerPainted, this._onLayerPainted, this);\n    if (this.isShowing()) {\n      this._model.enable();\n    }\n  }\n\n  /**\n   * @override\n   * @param {!SDK.SDKModel.Target} target\n   */\n  targetRemoved(target) {\n    if (!this._model || this._model.target() !== target) {\n      return;\n    }\n    this._model.removeEventListener(Events.LayerTreeChanged, this._onLayerTreeUpdated, this);\n    this._model.removeEventListener(Events.LayerPainted, this._onLayerPainted, this);\n    this._model.disable();\n    this._model = null;\n  }\n\n  _onLayerTreeUpdated() {\n    this._updateThrottler.schedule(this._update.bind(this));\n  }\n\n  /**\n   * @return {!Promise<*>}\n   */\n  _update() {\n    if (this._model) {\n      this._layerViewHost.setLayerTree(this._model.layerTree());\n      const resourceModel = this._model.target().model(SDK.ResourceTreeModel.ResourceTreeModel);\n      if (resourceModel) {\n        const mainFrame = resourceModel.mainFrame;\n        if (mainFrame) {\n          const url = mainFrame.url;\n          // Add the currently visualized url as an attribute to make it accessibles to e2e tests\n          this.element.setAttribute('test-current-url', url);\n        }\n      }\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onLayerPainted(event) {\n    if (!this._model) {\n      return;\n    }\n    const layer = /** @type {!SDK.LayerTreeBase.Layer} */ (event.data);\n    const selection = this._layerViewHost.selection();\n    if (selection && selection.layer() === layer) {\n      this._layerDetailsView.update();\n    }\n    this._layers3DView.updateLayerSnapshot(layer);\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onPaintProfileRequested(event) {\n    const selection = /** @type {!LayerViewer.LayerViewHost.Selection} */ (event.data);\n    this._layers3DView.snapshotForSelection(selection).then(snapshotWithRect => {\n      if (!snapshotWithRect) {\n        return;\n      }\n      this._layerBeingProfiled = selection.layer();\n      if (!this._tabbedPane.hasTab(DetailsViewTabs.Profiler)) {\n        this._tabbedPane.appendTab(\n            DetailsViewTabs.Profiler, i18nString(UIStrings.profiler), this._paintProfilerView, undefined, true, true);\n      }\n      this._tabbedPane.selectTab(DetailsViewTabs.Profiler);\n      this._paintProfilerView.profile(snapshotWithRect.snapshot);\n    });\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onTabClosed(event) {\n    if (event.data.tabId !== DetailsViewTabs.Profiler || !this._layerBeingProfiled) {\n      return;\n    }\n    this._paintProfilerView.reset();\n    this._layers3DView.showImageForLayer(this._layerBeingProfiled, undefined);\n    this._layerBeingProfiled = null;\n  }\n\n  /**\n   * @param {string=} imageURL\n   */\n  _showImage(imageURL) {\n    if (this._layerBeingProfiled) {\n      this._layers3DView.showImageForLayer(this._layerBeingProfiled, imageURL);\n    }\n  }\n\n  /**\n   * @param {!Common.EventTarget.EventTargetEvent} event\n   */\n  _onScaleChanged(event) {\n    this._paintProfilerView.setScale(/** @type {number} */ (event.data));\n  }\n}\n\nexport const DetailsViewTabs = {\n  Details: 'details',\n  Profiler: 'profiler'\n};\n"]}