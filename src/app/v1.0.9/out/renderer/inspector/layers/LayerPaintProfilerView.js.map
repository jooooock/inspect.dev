{"version":3,"file":"LayerPaintProfilerView.js","sourceRoot":"","sources":["../../../../../front_end/layers/LayerPaintProfilerView.js"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,WAAW,MAAM,iCAAiC,CAAC;AAE/D,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAElC,MAAM,OAAO,sBAAuB,SAAQ,EAAE,CAAC,WAAW,CAAC,WAAW;IACpE;;OAEG;IACH,YAAY,iBAAiB;QAC3B,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAEnB,IAAI,CAAC,YAAY,GAAG,IAAI,WAAW,CAAC,iBAAiB,CAAC,2BAA2B,EAAE,CAAC;QACpF,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,GAAG,IAAI,WAAW,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;QACjG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAE5C,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CACpC,WAAW,CAAC,iBAAiB,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QAErF,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;IAC5B,CAAC;IAED,KAAK;QACH,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IAC5D,CAAC;IAED;;OAEG;IACH,OAAO,CAAC,QAAQ;QACd,QAAQ,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;QAE/E;;;;WAIG;QACH,SAAS,iBAAiB,CAAC,QAAQ,EAAE,GAAG;YACtC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;YAC3C,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,QAAQ,EAAE,GAAG,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;YACrE,IAAI,QAAQ,EAAE;gBACZ,QAAQ,CAAC,OAAO,EAAE,CAAC;aACpB;QACH,CAAC;IACH,CAAC;IAED;;OAEG;IACH,QAAQ,CAAC,KAAK;QACZ,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC,CAAC;IAC5E,CAAC;CACF","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as LayerViewer from '../layer_viewer/layer_viewer.js';\nimport * as SDK from '../sdk/sdk.js';  // eslint-disable-line no-unused-vars\nimport * as UI from '../ui/ui.js';\n\nexport class LayerPaintProfilerView extends UI.SplitWidget.SplitWidget {\n  /**\n   * @param {function(string=):void} showImageCallback\n   */\n  constructor(showImageCallback) {\n    super(true, false);\n\n    this._logTreeView = new LayerViewer.PaintProfilerView.PaintProfilerCommandLogView();\n    this.setSidebarWidget(this._logTreeView);\n    this._paintProfilerView = new LayerViewer.PaintProfilerView.PaintProfilerView(showImageCallback);\n    this.setMainWidget(this._paintProfilerView);\n\n    this._paintProfilerView.addEventListener(\n        LayerViewer.PaintProfilerView.Events.WindowChanged, this._onWindowChanged, this);\n\n    this._logTreeView.focus();\n  }\n\n  reset() {\n    this._paintProfilerView.setSnapshotAndLog(null, [], null);\n  }\n\n  /**\n   * @param {!SDK.PaintProfiler.PaintProfilerSnapshot} snapshot\n   */\n  profile(snapshot) {\n    snapshot.commandLog().then(log => setSnapshotAndLog.call(this, snapshot, log));\n\n    /**\n     * @param {?SDK.PaintProfiler.PaintProfilerSnapshot} snapshot\n     * @param {?Array<!SDK.PaintProfiler.PaintProfilerLogItem>} log\n     * @this {LayerPaintProfilerView}\n     */\n    function setSnapshotAndLog(snapshot, log) {\n      this._logTreeView.setCommandLog(log || []);\n      this._paintProfilerView.setSnapshotAndLog(snapshot, log || [], null);\n      if (snapshot) {\n        snapshot.release();\n      }\n    }\n  }\n\n  /**\n   * @param {number} scale\n   */\n  setScale(scale) {\n    this._paintProfilerView.setScale(scale);\n  }\n\n  _onWindowChanged() {\n    this._logTreeView.updateWindow(this._paintProfilerView.selectionWindow());\n  }\n}\n"]}