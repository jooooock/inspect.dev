{"version":3,"file":"WebAudioModel.js","sourceRoot":"","sources":["../../../../../front_end/web_audio/WebAudioModel.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../sdk/sdk.js';\n\n/**\n * @implements {ProtocolProxyApi.WebAudioDispatcher}\n */\nexport class WebAudioModel extends SDK.SDKModel.SDKModel {\n  /**\n   * @param {!SDK.SDKModel.Target} target\n   */\n  constructor(target) {\n    super(target);\n\n    this._enabled = false;\n\n    this._agent = target.webAudioAgent();\n    target.registerWebAudioDispatcher(this);\n\n    // TODO(crbug.com/963510): Some OfflineAudioContexts are not uninitialized\n    // properly because LifeCycleObserver::ContextDestroyed() is not fired for\n    // unknown reasons. This creates inconsistency in AudioGraphTracer\n    // and AudioContextSelector in DevTools.\n    //\n    // To resolve this inconsistency, we flush the leftover from the previous\n    // frame when the current page is loaded. This call can be omitted when the\n    // bug is fixed.\n    SDK.SDKModel.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.FrameNavigated, this._flushContexts,\n        this);\n  }\n\n  _flushContexts() {\n    this.dispatchEventToListeners(Events.ModelReset);\n  }\n\n  /**\n   * @override\n   * @return {!Promise<void>}\n   */\n  async suspendModel() {\n    this.dispatchEventToListeners(Events.ModelSuspend);\n    await this._agent.invoke_disable();\n  }\n\n  /**\n   * @override\n   * @return {!Promise<void>}\n   */\n  async resumeModel() {\n    if (!this._enabled) {\n      return Promise.resolve();\n    }\n    await this._agent.invoke_enable();\n  }\n\n  ensureEnabled() {\n    if (this._enabled) {\n      return;\n    }\n    this._agent.invoke_enable();\n    this._enabled = true;\n  }\n\n  /**\n   * @param {!Protocol.WebAudio.ContextCreatedEvent} event\n   * @override\n   */\n  contextCreated({context}) {\n    this.dispatchEventToListeners(Events.ContextCreated, context);\n  }\n\n  /**\n   * @param {!Protocol.WebAudio.ContextWillBeDestroyedEvent} event\n   * @override\n   */\n  contextWillBeDestroyed({contextId}) {\n    this.dispatchEventToListeners(Events.ContextDestroyed, contextId);\n  }\n\n  /**\n   * @param {!Protocol.WebAudio.ContextChangedEvent} event\n   * @override\n   */\n  contextChanged({context}) {\n    this.dispatchEventToListeners(Events.ContextChanged, context);\n  }\n\n  /**\n   * @param {!Protocol.WebAudio.AudioListenerCreatedEvent} event\n   * @override\n   */\n  audioListenerCreated({listener}) {\n    this.dispatchEventToListeners(Events.AudioListenerCreated, listener);\n  }\n\n  /**\n   * @param {!Protocol.WebAudio.AudioListenerWillBeDestroyedEvent} event\n   * @override\n   */\n  audioListenerWillBeDestroyed({listenerId, contextId}) {\n    this.dispatchEventToListeners(Events.AudioListenerWillBeDestroyed, {listenerId, contextId});\n  }\n\n  /**\n   * @param {!Protocol.WebAudio.AudioNodeCreatedEvent} event\n   * @override\n   */\n  audioNodeCreated({node}) {\n    this.dispatchEventToListeners(Events.AudioNodeCreated, node);\n  }\n\n  /**\n   * @param {!Protocol.WebAudio.AudioNodeWillBeDestroyedEvent} event\n   * @override\n   */\n  audioNodeWillBeDestroyed({contextId, nodeId}) {\n    this.dispatchEventToListeners(Events.AudioNodeWillBeDestroyed, {contextId, nodeId});\n  }\n\n  /**\n   * @param {!Protocol.WebAudio.AudioParamCreatedEvent} event\n   * @override\n   */\n  audioParamCreated({param}) {\n    this.dispatchEventToListeners(Events.AudioParamCreated, param);\n  }\n\n  /**\n   * @param {!Protocol.WebAudio.AudioParamWillBeDestroyedEvent} event\n   * @override\n   */\n  audioParamWillBeDestroyed({contextId, nodeId, paramId}) {\n    this.dispatchEventToListeners(Events.AudioParamWillBeDestroyed, {contextId, nodeId, paramId});\n  }\n\n  /**\n   * @param {!Protocol.WebAudio.NodesConnectedEvent} event\n   * @override\n   */\n  nodesConnected({contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex}) {\n    this.dispatchEventToListeners(\n        Events.NodesConnected, {contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex});\n  }\n\n  /**\n   * @param {!Protocol.WebAudio.NodesDisconnectedEvent} event\n   * @override\n   */\n  nodesDisconnected({contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex}) {\n    this.dispatchEventToListeners(\n        Events.NodesDisconnected, {contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex});\n  }\n\n  /**\n   * @param {!Protocol.WebAudio.NodeParamConnectedEvent} event\n   * @override\n   */\n  nodeParamConnected({contextId, sourceId, destinationId, sourceOutputIndex}) {\n    this.dispatchEventToListeners(Events.NodeParamConnected, {contextId, sourceId, destinationId, sourceOutputIndex});\n  }\n\n  /**\n   * @param {!Protocol.WebAudio.NodeParamDisconnectedEvent} event\n   * @override\n   */\n  nodeParamDisconnected({contextId, sourceId, destinationId, sourceOutputIndex}) {\n    this.dispatchEventToListeners(\n        Events.NodeParamDisconnected, {contextId, sourceId, destinationId, sourceOutputIndex});\n  }\n\n  /**\n   * @param {!Protocol.WebAudio.GraphObjectId} contextId\n   * @return {!Promise<?Protocol.WebAudio.ContextRealtimeData>}\n   */\n  async requestRealtimeData(contextId) {\n    const realtimeResponse = await this._agent.invoke_getRealtimeData({contextId});\n    return realtimeResponse.realtimeData;\n  }\n}\n\nSDK.SDKModel.SDKModel.register(WebAudioModel, SDK.SDKModel.Capability.DOM, false);\n\n/** @enum {symbol} */\nexport const Events = {\n  ContextCreated: Symbol('ContextCreated'),\n  ContextDestroyed: Symbol('ContextDestroyed'),\n  ContextChanged: Symbol('ContextChanged'),\n  ModelReset: Symbol('ModelReset'),\n  ModelSuspend: Symbol('ModelSuspend'),\n  AudioListenerCreated: Symbol('AudioListenerCreated'),\n  AudioListenerWillBeDestroyed: Symbol('AudioListenerWillBeDestroyed'),\n  AudioNodeCreated: Symbol('AudioNodeCreated'),\n  AudioNodeWillBeDestroyed: Symbol('AudioNodeWillBeDestroyed'),\n  AudioParamCreated: Symbol('AudioParamCreated'),\n  AudioParamWillBeDestroyed: Symbol('AudioParamWillBeDestroyed'),\n  NodesConnected: Symbol('NodesConnected'),\n  NodesDisconnected: Symbol('NodesDisconnected'),\n  NodeParamConnected: Symbol('NodeParamConnected'),\n  NodeParamDisconnected: Symbol('NodeParamDisconnected'),\n};\n"]}