{"version":3,"file":"MediaModel.js","sourceRoot":"","sources":["../../../../../front_end/media/MediaModel.js"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,GAAG,MAAM,eAAe,CAAC;AAErC,2EAA2E;AAC3E;;;;;;;GAOG;AACH,qBAAqB;AACrB,MAAM,CAAC,IAAI,WAAW,CAAC;AAEvB,qBAAqB;AACrB,MAAM,CAAC,MAAM,gBAAgB,GAAG;IAC9B,uBAAuB,EAAE,MAAM,CAAC,yBAAyB,CAAC;IAC1D,iBAAiB,EAAE,MAAM,CAAC,mBAAmB,CAAC;IAC9C,oBAAoB,EAAE,MAAM,CAAC,sBAAsB,CAAC;IACpD,kBAAkB,EAAE,MAAM,CAAC,oBAAoB,CAAC;IAChD,cAAc,EAAE,MAAM,CAAC,gBAAgB,CAAC;CACzC,CAAC;AAEF;;GAEG;AACH,MAAM,OAAO,UAAW,SAAQ,GAAG,CAAC,QAAQ,CAAC,QAAQ;IACnD;;OAEG;IACH,YAAY,MAAM;QAChB,KAAK,CAAC,MAAM,CAAC,CAAC;QAEd,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;QAElC,MAAM,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,WAAW;QACf,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;SAC1B;QACD,MAAM,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;IACpC,CAAC;IAED,aAAa;QACX,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;IAED;;;OAGG;IACH,uBAAuB,CAAC,KAAK;QAC3B,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;IACjF,CAAC;IAED;;;OAGG;IACH,iBAAiB,CAAC,KAAK;QACrB,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;IAC3E,CAAC;IAED;;;OAGG;IACH,oBAAoB,CAAC,KAAK;QACxB,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;IAC9E,CAAC;IAED;;;OAGG;IACH,kBAAkB,CAAC,KAAK;QACtB,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;IAC5E,CAAC;IAED;;;OAGG;IACH,cAAc,CAAC,EAAC,OAAO,EAAC;QACtB,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;IAC1E,CAAC;CACF;AAED,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../sdk/sdk.js';\n\n// We extend Protocol.Media.PlayerEvent here to allow for displayTimestamp.\n/**\n * @typedef {{\n *     value: *,\n *     timestamp: (number|string|undefined),\n *     displayTimestamp: string,\n *     event: string,\n * }}\n */\n// @ts-ignore typedef\nexport let PlayerEvent;\n\n/** @enum {symbol} */\nexport const ProtocolTriggers = {\n  PlayerPropertiesChanged: Symbol('PlayerPropertiesChanged'),\n  PlayerEventsAdded: Symbol('PlayerEventsAdded'),\n  PlayerMessagesLogged: Symbol('PlayerMessagesLogged'),\n  PlayerErrorsRaised: Symbol('PlayerErrorsRaised'),\n  PlayersCreated: Symbol('PlayersCreated')\n};\n\n/**\n * @implements {ProtocolProxyApi.MediaDispatcher}\n */\nexport class MediaModel extends SDK.SDKModel.SDKModel {\n  /**\n   * @param {!SDK.SDKModel.Target} target\n   */\n  constructor(target) {\n    super(target);\n\n    this._enabled = false;\n    this._agent = target.mediaAgent();\n\n    target.registerMediaDispatcher(this);\n  }\n\n  /**\n   * @override\n   * @return {!Promise<void>}\n   */\n  async resumeModel() {\n    if (!this._enabled) {\n      return Promise.resolve();\n    }\n    await this._agent.invoke_enable();\n  }\n\n  ensureEnabled() {\n    this._agent.invoke_enable();\n    this._enabled = true;\n  }\n\n  /**\n   * @param {!Protocol.Media.PlayerPropertiesChangedEvent} event\n   * @override\n   */\n  playerPropertiesChanged(event) {\n    this.dispatchEventToListeners(ProtocolTriggers.PlayerPropertiesChanged, event);\n  }\n\n  /**\n   * @param {!Protocol.Media.PlayerEventsAddedEvent} event\n   * @override\n   */\n  playerEventsAdded(event) {\n    this.dispatchEventToListeners(ProtocolTriggers.PlayerEventsAdded, event);\n  }\n\n  /**\n   * @param {!Protocol.Media.PlayerMessagesLoggedEvent} event\n   * @override\n   */\n  playerMessagesLogged(event) {\n    this.dispatchEventToListeners(ProtocolTriggers.PlayerMessagesLogged, event);\n  }\n\n  /**\n   * @param {!Protocol.Media.PlayerErrorsRaisedEvent} event\n   * @override\n   */\n  playerErrorsRaised(event) {\n    this.dispatchEventToListeners(ProtocolTriggers.PlayerErrorsRaised, event);\n  }\n\n  /**\n   * @param {!Protocol.Media.PlayersCreatedEvent} event\n   * @override\n   */\n  playersCreated({players}) {\n    this.dispatchEventToListeners(ProtocolTriggers.PlayersCreated, players);\n  }\n}\n\nSDK.SDKModel.SDKModel.register(MediaModel, SDK.SDKModel.Capability.DOM, false);\n"]}