{"version":3,"file":"ProtocolMonitor.js","sourceRoot":"","sources":["../../../../../front_end/protocol_monitor/ProtocolMonitor.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as DataGrid from '../data_grid/data_grid.js';\nimport * as Host from '../host/host.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as Platform from '../platform/platform.js';  // eslint-disable-line no-unused-vars\nimport * as ProtocolClient from '../protocol_client/protocol_client.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as SourceFrame from '../source_frame/source_frame.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as UI from '../ui/ui.js';\n\nexport const UIStrings = {\n  /**\n  *@description Text for one or a group of functions\n  */\n  method: 'Method',\n  /**\n  *@description Text in Protocol Monitor of the Protocol Monitor tab\n  */\n  direction: 'Direction',\n  /**\n  *@description Text in Protocol Monitor of the Protocol Monitor tab\n  */\n  request: 'Request',\n  /**\n  *@description Text for a network response\n  */\n  response: 'Response',\n  /**\n  *@description Text for timestamps of items\n  */\n  timestamp: 'Timestamp',\n  /**\n  *@description Text in Protocol Monitor of the Protocol Monitor tab\n  */\n  target: 'Target',\n  /**\n  *@description Text to record a series of actions for analysis\n  */\n  record: 'Record',\n  /**\n  *@description Text to clear everything\n  */\n  clearAll: 'Clear all',\n  /**\n  *@description Data grid name for Protocol Monitor data grids\n  */\n  protocolMonitor: 'Protocol Monitor',\n  /**\n  *@description Text to filter result items\n  */\n  filter: 'Filter',\n  /**\n  *@description Text for the documentation of something\n  */\n  documentation: 'Documentation',\n  /**\n  *@description Cell text content in Protocol Monitor of the Protocol Monitor tab\n  *@example {30} PH1\n  */\n  sMs: '{PH1} ms',\n  /**\n  *@description Text in Protocol Monitor of the Protocol Monitor tab\n  */\n  noMessageSelected: 'No message selected',\n};\nconst str_ = i18n.i18n.registerUIStrings('protocol_monitor/ProtocolMonitor.js', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ProtocolMonitorImpl extends UI.Widget.VBox {\n  constructor() {\n    super(true);\n    /**\n     * @type {!Array<!ProtocolNode>}\n     */\n    this._nodes = [];\n    this._started = false;\n    this._startTime = 0;\n    /**\n     * @type {!Map<number, !ProtocolNode>}\n     */\n    this._nodeForId = new Map();\n    /**\n     * @param {!ProtocolNode} node\n     */\n    this._filter = node => true;\n    /**\n     * @type {!Array<!ProtocolColumnConfig>}\n     */\n    this._columns = [\n      {id: 'method', title: i18nString(UIStrings.method), visible: true, sortable: true, hideable: false, weight: 60}, {\n        id: 'direction',\n        title: i18nString(UIStrings.direction),\n        visible: false,\n        sortable: true,\n        hideable: true,\n        weight: 30\n      },\n      {id: 'request', title: i18nString(UIStrings.request), visible: true, sortable: false, hideable: true, weight: 60},\n      {\n        id: 'response',\n        title: i18nString(UIStrings.response),\n        visible: true,\n        sortable: false,\n        hideable: true,\n        weight: 60\n      },\n      {\n        id: 'timestamp',\n        title: i18nString(UIStrings.timestamp),\n        visible: false,\n        sortable: true,\n        hideable: true,\n        weight: 30\n      },\n      {id: 'target', title: i18nString(UIStrings.target), visible: false, sortable: true, hideable: true, weight: 30}\n    ];\n\n    this.registerRequiredCSS('protocol_monitor/protocolMonitor.css', {enableLegacyPatching: true});\n    const topToolbar = new UI.Toolbar.Toolbar('protocol-monitor-toolbar', this.contentElement);\n    const recordButton = new UI.Toolbar.ToolbarToggle(\n        i18nString(UIStrings.record), 'largeicon-start-recording', 'largeicon-stop-recording');\n    recordButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, () => {\n      recordButton.setToggled(!recordButton.toggled());\n      this._setRecording(recordButton.toggled());\n    });\n    recordButton.setToggleWithRedColor(true);\n    topToolbar.appendToolbarItem(recordButton);\n    recordButton.setToggled(true);\n\n    const clearButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clearAll), 'largeicon-clear');\n    clearButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, () => {\n      this._dataGrid.rootNode().removeChildren();\n      this._nodes = [];\n      this._nodeForId.clear();\n    });\n    topToolbar.appendToolbarItem(clearButton);\n\n    const split = new UI.SplitWidget.SplitWidget(true, true, 'protocol-monitor-panel-split', 250);\n    split.show(this.contentElement);\n    this._dataGrid = new DataGrid.SortableDataGrid.SortableDataGrid({\n      displayName: i18nString(UIStrings.protocolMonitor),\n      columns: this._columns.map(column => ({\n                                   id: column.id,\n                                   title: column.title,\n                                   sortable: column.sortable,\n                                   weight: column.weight,\n                                   titleDOMFragment: undefined,\n                                   sort: undefined,\n                                   align: undefined,\n                                   width: undefined,\n                                   fixedWidth: undefined,\n                                   editable: undefined,\n                                   nonSelectable: undefined,\n                                   longText: undefined,\n                                   disclosure: undefined,\n                                   allowInSortByEvenWhenHidden: undefined,\n                                   dataType: undefined,\n                                   defaultWeight: undefined,\n                                 })),\n      editCallback: undefined,\n      deleteCallback: undefined,\n      refreshCallback: undefined,\n    });\n    this._dataGrid.element.style.flex = '1';\n    this._infoWidget = new InfoWidget();\n    split.setMainWidget(this._dataGrid.asWidget());\n    split.setSidebarWidget(this._infoWidget);\n    this._dataGrid.addEventListener(\n        DataGrid.DataGrid.Events.SelectedNode, event => this._infoWidget.render(event.data.data));\n    this._dataGrid.addEventListener(DataGrid.DataGrid.Events.DeselectedNode, event => this._infoWidget.render(null));\n    this._dataGrid.setHeaderContextMenuCallback(this._innerHeaderContextMenu.bind(this));\n    this._dataGrid.setRowContextMenuCallback(this._innerRowContextMenu.bind(this));\n\n\n    this._dataGrid.addEventListener(DataGrid.DataGrid.Events.SortingChanged, this._sortDataGrid.bind(this));\n    this._dataGrid.setStickToBottom(true);\n    this._dataGrid.sortNodes(\n        DataGrid.SortableDataGrid.SortableDataGrid.NumericComparator.bind(null, 'timestamp'), false);\n    this._updateColumnVisibility();\n\n    const keys = ['method', 'request', 'response', 'direction'];\n    this._filterParser = new TextUtils.TextUtils.FilterParser(keys);\n    this._suggestionBuilder = new UI.FilterSuggestionBuilder.FilterSuggestionBuilder(keys);\n\n    this._textFilterUI = new UI.Toolbar.ToolbarInput(\n        i18nString(UIStrings.filter), '', 1, .2, '', this._suggestionBuilder.completions.bind(this._suggestionBuilder),\n        true);\n    this._textFilterUI.addEventListener(UI.Toolbar.ToolbarInput.Event.TextChanged, event => {\n      const query = /** @type {string} */ (event.data);\n      const filters = this._filterParser.parse(query);\n      /**\n       * @param {!ProtocolNode} node\n       */\n      const filter = node => {\n        for (const {key, text, negative} of filters) {\n          if (!text) {\n            continue;\n          }\n          const data = key ? node.data[key] : node.data;\n          if (!data) {\n            continue;\n          }\n          const found = JSON.stringify(data).toLowerCase().indexOf(text.toLowerCase()) !== -1;\n          if (found === negative) {\n            return false;\n          }\n        }\n        return true;\n      };\n      this._filter = filter;\n      this._filterNodes();\n    });\n    topToolbar.appendToolbarItem(this._textFilterUI);\n  }\n\n  _filterNodes() {\n    for (const node of this._nodes) {\n      if (this._filter(node)) {\n        if (!node.parent) {\n          this._dataGrid.insertChild(node);\n        }\n      } else {\n        node.remove();\n      }\n    }\n  }\n\n  /**\n   * @param {!UI.ContextMenu.SubMenu} contextMenu\n   */\n  _innerHeaderContextMenu(contextMenu) {\n    const columnConfigs = this._columns.filter(columnConfig => columnConfig.hideable);\n    for (const columnConfig of columnConfigs) {\n      contextMenu.headerSection().appendCheckboxItem(\n          columnConfig.title, this._toggleColumnVisibility.bind(this, columnConfig), columnConfig.visible);\n    }\n  }\n\n  /**\n   * @param {!UI.ContextMenu.ContextMenu} contextMenu\n   * @param {!DataGrid.DataGrid.DataGridNode<!DataGrid.ViewportDataGrid.ViewportDataGridNode<!DataGrid.SortableDataGrid.SortableDataGridNode<!ProtocolNode>>>} node\n   */\n  _innerRowContextMenu(contextMenu, node) {\n    contextMenu.defaultSection().appendItem(i18nString(UIStrings.filter), () => {\n      this._textFilterUI.setValue(`method:${node.data.method}`, true);\n    });\n    contextMenu.defaultSection().appendItem(i18nString(UIStrings.documentation), () => {\n      const [domain, method] = node.data.method.split('.');\n      const type = node.data.direction === 'sent' ? 'method' : 'event';\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(\n          `https://chromedevtools.github.io/devtools-protocol/tot/${domain}#${type}-${method}`);\n    });\n  }\n\n  /**\n   * @param {!ProtocolColumnConfig} columnConfig\n   */\n  _toggleColumnVisibility(columnConfig) {\n    columnConfig.visible = !columnConfig.visible;\n    this._updateColumnVisibility();\n  }\n\n  _updateColumnVisibility() {\n    const visibleColumns = new Set();\n    for (const columnConfig of this._columns) {\n      if (columnConfig.visible) {\n        visibleColumns.add(columnConfig.id);\n      }\n    }\n    this._dataGrid.setColumnsVisiblity(visibleColumns);\n  }\n\n  _sortDataGrid() {\n    const sortColumnId = this._dataGrid.sortColumnId();\n    if (!sortColumnId) {\n      return;\n    }\n\n    let columnIsNumeric = true;\n    switch (sortColumnId) {\n      case 'method':\n      case 'direction':\n        columnIsNumeric = false;\n        break;\n    }\n\n\n    const comparator = columnIsNumeric ? DataGrid.SortableDataGrid.SortableDataGrid.NumericComparator :\n                                         DataGrid.SortableDataGrid.SortableDataGrid.StringComparator;\n    this._dataGrid.sortNodes(comparator.bind(null, sortColumnId), !this._dataGrid.isSortOrderAscending());\n  }\n\n  /**\n   * @override\n   */\n  wasShown() {\n    if (this._started) {\n      return;\n    }\n    this._started = true;\n    this._startTime = Date.now();\n    this._setRecording(true);\n  }\n\n  /**\n   * @param {boolean} recording\n   */\n  _setRecording(recording) {\n    const test = ProtocolClient.InspectorBackend.test;\n    if (recording) {\n      // TODO: TS thinks that properties are read-only because\n      // in TS test is defined as a namespace.\n      // @ts-ignore\n      test.onMessageSent = this._messageSent.bind(this);\n      // @ts-ignore\n      test.onMessageReceived = this._messageReceived.bind(this);\n    } else {\n      // @ts-ignore\n      test.onMessageSent = null;\n      // @ts-ignore\n      test.onMessageReceived = null;\n    }\n  }\n\n  /**\n   * @param {?SDK.SDKModel.Target} target\n   * @return {string}\n   */\n  _targetToString(target) {\n    if (!target) {\n      return '';\n    }\n    return target.decorateLabel(\n        `${target.name()} ${target === SDK.SDKModel.TargetManager.instance().mainTarget() ? '' : target.id()}`);\n  }\n\n  /**\n   * @param {*} message\n   * @param {?ProtocolClient.InspectorBackend.TargetBase} target\n   */\n  _messageReceived(message, target) {\n    if ('id' in message) {\n      const node = this._nodeForId.get(message.id);\n      if (!node) {\n        return;\n      }\n      node.data.response = message.result || message.error;\n      node.hasError = Boolean(message.error);\n      node.refresh();\n      if (this._dataGrid.selectedNode === node) {\n        const data =\n            /** @type {?{method: string, direction: string, request: ?Object, response: ?Object, timestamp: number}}*/ (\n                node.data);\n        this._infoWidget.render(data);\n      }\n      return;\n    }\n\n    const sdkTarget = /** @type {?SDK.SDKModel.Target} */ (target);\n    const node = new ProtocolNode({\n      method: message.method,\n      direction: 'received',\n      response: message.params,\n      timestamp: Date.now() - this._startTime,\n      request: '',\n      target: this._targetToString(sdkTarget)\n    });\n    this._nodes.push(node);\n    if (this._filter(node)) {\n      this._dataGrid.insertChild(node);\n    }\n  }\n\n  /**\n   * @param {{domain: string, method: string, params: !Object, id: number}} message\n   * @param {?ProtocolClient.InspectorBackend.TargetBase} target\n   */\n  _messageSent(message, target) {\n    const sdkTarget = /** @type {?SDK.SDKModel.Target} */ (target);\n    const node = new ProtocolNode({\n      method: message.method,\n      direction: 'sent',\n      request: message.params,\n      timestamp: Date.now() - this._startTime,\n      response: '(pending)',\n      id: message.id,\n      target: this._targetToString(sdkTarget)\n    });\n    this._nodeForId.set(message.id, node);\n    this._nodes.push(node);\n    if (this._filter(node)) {\n      this._dataGrid.insertChild(node);\n    }\n  }\n}\n/**\n * @extends {DataGrid.SortableDataGrid.SortableDataGridNode<ProtocolNode>}\n */\nexport class ProtocolNode extends DataGrid.SortableDataGrid.SortableDataGridNode {\n  /**\n   * @param {?Object.<string, *>=} data\n   */\n  constructor(data) {\n    super(data);\n    this.hasError = false;\n  }\n\n  /**\n   * @override\n   * @param {string} columnId\n   * @return {!HTMLElement}\n   */\n  createCell(columnId) {\n    const createSourceCell = () => {\n      const cell = this.createTD(columnId);\n      const obj = SDK.RemoteObject.RemoteObject.fromLocalObject(this.data[columnId]);\n      cell.textContent = obj.description ? obj.description.trimEndWithMaxLength(50) : '';\n      cell.classList.add('source-code');\n      return cell;\n    };\n    switch (columnId) {\n      case 'response': {\n        if (!this.data[columnId] && this.data.direction === 'send') {\n          const cell = this.createTD(columnId);\n          cell.textContent = '(pending)';\n          return cell;\n        }\n        return createSourceCell();\n      }\n      case 'request': {\n        return createSourceCell();\n      }\n      case 'timestamp': {\n        const cell = this.createTD(columnId);\n        cell.textContent = i18nString(UIStrings.sMs, {PH1: this.data[columnId]});\n        return cell;\n      }\n    }\n    return super.createCell(columnId);\n  }\n\n  /**\n   * @override\n   */\n  element() {\n    const element = super.element();\n    element.classList.toggle('protocol-message-sent', this.data.direction === 'sent');\n    element.classList.toggle('protocol-message-received', this.data.direction !== 'sent');\n    element.classList.toggle('error', this.hasError);\n    return element;\n  }\n}\n\nexport class InfoWidget extends UI.Widget.VBox {\n  constructor() {\n    super();\n    this._tabbedPane = new UI.TabbedPane.TabbedPane();\n    this._tabbedPane.appendTab('request', i18nString(UIStrings.request), new UI.Widget.Widget());\n    this._tabbedPane.appendTab('response', i18nString(UIStrings.response), new UI.Widget.Widget());\n    this._tabbedPane.show(this.contentElement);\n    this._tabbedPane.selectTab('response');\n    this.render(null);\n  }\n\n  /**\n   * @param {?{method: string, direction: string, request: ?Object, response: ?Object, timestamp: number}} data\n   */\n  render(data) {\n    const requestEnabled = data && data.direction === 'sent';\n    this._tabbedPane.setTabEnabled('request', Boolean(requestEnabled));\n    if (!data) {\n      this._tabbedPane.changeTabView(\n          'request', new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.noMessageSelected)));\n      this._tabbedPane.changeTabView(\n          'response', new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.noMessageSelected)));\n      return;\n    }\n    if (!requestEnabled) {\n      this._tabbedPane.selectTab('response');\n    }\n\n    this._tabbedPane.changeTabView('request', SourceFrame.JSONView.JSONView.createViewSync(data.request));\n    this._tabbedPane.changeTabView('response', SourceFrame.JSONView.JSONView.createViewSync(data.response));\n  }\n}\n\n/**\n * @typedef {{\n *  id: string,\n *  title: !Platform.UIString.LocalizedString,\n *  visible: boolean,\n *  sortable: boolean,\n *  hideable: boolean,\n *  weight: number,\n * }}\n */\n// @ts-ignore typedef\nexport let ProtocolColumnConfig;\n"]}