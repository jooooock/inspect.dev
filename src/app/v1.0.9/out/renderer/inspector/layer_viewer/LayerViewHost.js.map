{"version":3,"file":"LayerViewHost.js","sourceRoot":"","sources":["../../../../../front_end/layer_viewer/LayerViewHost.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as SDK from '../sdk/sdk.js';\nimport * as UI from '../ui/ui.js';  // eslint-disable-line no-unused-vars\n\nexport const UIStrings = {\n  /**\n  *@description Text in Layer View Host of the Layers panel\n  */\n  showInternalLayers: 'Show internal layers',\n};\nconst str_ = i18n.i18n.registerUIStrings('layer_viewer/LayerViewHost.js', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n/**\n * @interface\n */\nexport class LayerView {\n  /**\n   * @param {?Selection} selection\n   */\n  hoverObject(selection) {\n  }\n\n  /**\n   * @param {?Selection} selection\n   */\n  selectObject(selection) {\n  }\n\n  /**\n   * @param {?SDK.LayerTreeBase.LayerTreeBase} layerTree\n   */\n  setLayerTree(layerTree) {}\n}\n\nexport class Selection {\n  /**\n   * @param {!Type} type\n   * @param {!SDK.LayerTreeBase.Layer} layer\n   */\n  constructor(type, layer) {\n    this._type = type;\n    this._layer = layer;\n  }\n\n  /**\n   * @param {?Selection} a\n   * @param {?Selection} b\n   * @return {boolean}\n   */\n  static isEqual(a, b) {\n    return a && b ? a._isEqual(b) : a === b;\n  }\n\n  /**\n   * @return {!Type}\n   */\n  type() {\n    return this._type;\n  }\n\n  /**\n   * @return {!SDK.LayerTreeBase.Layer}\n   */\n  layer() {\n    return this._layer;\n  }\n\n  /**\n   * @param {!Selection} other\n   * @return {boolean}\n   */\n  _isEqual(other) {\n    return false;\n  }\n}\n\n/**\n * @enum {symbol}\n */\nexport const Type = {\n  Layer: Symbol('Layer'),\n  ScrollRect: Symbol('ScrollRect'),\n  Snapshot: Symbol('Snapshot')\n};\n\nexport class LayerSelection extends Selection {\n  /**\n   * @param {!SDK.LayerTreeBase.Layer} layer\n   */\n  constructor(layer) {\n    console.assert(Boolean(layer), 'LayerSelection with empty layer');\n    super(Type.Layer, layer);\n  }\n\n  /**\n   * @override\n   * @param {!Selection} other\n   * @return {boolean}\n   */\n  _isEqual(other) {\n    return other._type === Type.Layer && other.layer().id() === this.layer().id();\n  }\n}\n\nexport class ScrollRectSelection extends Selection {\n  /**\n   * @param {!SDK.LayerTreeBase.Layer} layer\n   * @param {number} scrollRectIndex\n   */\n  constructor(layer, scrollRectIndex) {\n    super(Type.ScrollRect, layer);\n    this.scrollRectIndex = scrollRectIndex;\n  }\n\n  /**\n   * @override\n   * @param {!Selection} other\n   * @return {boolean}\n   */\n  _isEqual(other) {\n    return other._type === Type.ScrollRect && this.layer().id() === other.layer().id() &&\n        this.scrollRectIndex === /** @type {!ScrollRectSelection} */ (other).scrollRectIndex;\n  }\n}\n\nexport class SnapshotSelection extends Selection {\n  /**\n   * @param {!SDK.LayerTreeBase.Layer} layer\n   * @param {!SDK.PaintProfiler.SnapshotWithRect} snapshot\n   */\n  constructor(layer, snapshot) {\n    super(Type.Snapshot, layer);\n    this._snapshot = snapshot;\n  }\n\n  /**\n   * @override\n   * @param {!Selection} other\n   * @return {boolean}\n   */\n  _isEqual(other) {\n    return other._type === Type.Snapshot && this.layer().id() === other.layer().id() &&\n        this._snapshot === /** @type {!SnapshotSelection} */ (other)._snapshot;\n  }\n\n  /**\n   * @return {!SDK.PaintProfiler.SnapshotWithRect}\n   */\n  snapshot() {\n    return this._snapshot;\n  }\n}\n\nexport class LayerViewHost {\n  constructor() {\n    /** @type {!Array.<!LayerView>} */\n    this._views = [];\n    this._selectedObject = null;\n    this._hoveredObject = null;\n    this._showInternalLayersSetting =\n        Common.Settings.Settings.instance().createSetting('layersShowInternalLayers', false);\n    /** @type {!Map<!SDK.LayerTreeBase.Layer, !SnapshotSelection>} */\n    this._snapshotLayers = new Map();\n  }\n\n  /**\n   * @param {!LayerView} layerView\n   */\n  registerView(layerView) {\n    this._views.push(layerView);\n  }\n\n  /**\n   * @param {!Map<!SDK.LayerTreeBase.Layer, !SnapshotSelection>} snapshotLayers\n   */\n  setLayerSnapshotMap(snapshotLayers) {\n    this._snapshotLayers = snapshotLayers;\n  }\n\n  /**\n   * @return {!Map<!SDK.LayerTreeBase.Layer, !SnapshotSelection>}\n   */\n  getLayerSnapshotMap() {\n    return this._snapshotLayers;\n  }\n\n  /**\n   * @param {?SDK.LayerTreeBase.LayerTreeBase} layerTree\n   */\n  setLayerTree(layerTree) {\n    if (!layerTree) {\n      return;\n    }\n    this._target = layerTree.target();\n    const selectedLayer = this._selectedObject && this._selectedObject.layer();\n    if (selectedLayer && (!layerTree || !layerTree.layerById(selectedLayer.id()))) {\n      this.selectObject(null);\n    }\n    const hoveredLayer = this._hoveredObject && this._hoveredObject.layer();\n    if (hoveredLayer && (!layerTree || !layerTree.layerById(hoveredLayer.id()))) {\n      this.hoverObject(null);\n    }\n    for (const view of this._views) {\n      view.setLayerTree(layerTree);\n    }\n  }\n\n  /**\n   * @param {?Selection} selection\n   */\n  hoverObject(selection) {\n    if (Selection.isEqual(this._hoveredObject, selection)) {\n      return;\n    }\n    this._hoveredObject = selection;\n    const layer = selection && selection.layer();\n    this._toggleNodeHighlight(layer ? layer.nodeForSelfOrAncestor() : null);\n    for (const view of this._views) {\n      view.hoverObject(selection);\n    }\n  }\n\n  /**\n   * @param {?Selection} selection\n   */\n  selectObject(selection) {\n    if (Selection.isEqual(this._selectedObject, selection)) {\n      return;\n    }\n    this._selectedObject = selection;\n    for (const view of this._views) {\n      view.selectObject(selection);\n    }\n  }\n\n  /**\n   * @return {?Selection}\n   */\n  selection() {\n    return this._selectedObject;\n  }\n\n  /**\n   * @param {!UI.ContextMenu.ContextMenu} contextMenu\n   * @param {?Selection} selection\n   */\n  showContextMenu(contextMenu, selection) {\n    contextMenu.defaultSection().appendCheckboxItem(\n        i18nString(UIStrings.showInternalLayers), this._toggleShowInternalLayers.bind(this),\n        this._showInternalLayersSetting.get());\n    const node = selection && selection.layer() && selection.layer().nodeForSelfOrAncestor();\n    if (node) {\n      contextMenu.appendApplicableItems(node);\n    }\n    contextMenu.show();\n  }\n\n  /**\n   * @return {!Common.Settings.Setting<*>}\n   */\n  showInternalLayersSetting() {\n    return this._showInternalLayersSetting;\n  }\n\n  _toggleShowInternalLayers() {\n    this._showInternalLayersSetting.set(!this._showInternalLayersSetting.get());\n  }\n\n  /**\n   * @param {?SDK.DOMModel.DOMNode} node\n   */\n  _toggleNodeHighlight(node) {\n    if (node) {\n      node.highlightForTwoSeconds();\n      return;\n    }\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n  }\n}\n"]}