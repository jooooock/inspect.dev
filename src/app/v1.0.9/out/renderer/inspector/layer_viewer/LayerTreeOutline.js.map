{"version":3,"file":"LayerTreeOutline.js","sourceRoot":"","sources":["../../../../../front_end/layer_viewer/LayerTreeOutline.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../common/common.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as SDK from '../sdk/sdk.js';  // eslint-disable-line no-unused-vars\nimport * as UI from '../ui/ui.js';\n\nimport {LayerSelection, LayerView, LayerViewHost, Selection} from './LayerViewHost.js';  // eslint-disable-line no-unused-vars\n\nexport const UIStrings = {\n  /**\n  *@description Label for layers sidepanel tree\n  */\n  layersTreePane: 'Layers Tree Pane',\n  /**\n  *@description A context menu item in the DView of the Layers panel\n  */\n  showPaintProfiler: 'Show Paint Profiler',\n  /**\n  *@description Details text content in Layer Tree Outline of the Layers panel\n  *@example {10} PH1\n  *@example {10} PH2\n  */\n  updateChildDimension: ' ({PH1} × {PH2})',\n};\nconst str_ = i18n.i18n.registerUIStrings('layer_viewer/LayerTreeOutline.js', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n/**\n * @implements {LayerView}\n */\nexport class LayerTreeOutline extends Common.ObjectWrapper.ObjectWrapper {\n  /**\n   * @param {!LayerViewHost} layerViewHost\n   */\n  constructor(layerViewHost) {\n    super();\n    this._layerViewHost = layerViewHost;\n    this._layerViewHost.registerView(this);\n\n    this._treeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n    this._treeOutline.element.classList.add('layer-tree', 'overflow-auto');\n    this._treeOutline.element.addEventListener(\n        'mousemove', /** @type {!EventListener} */ (this._onMouseMove.bind(this)), false);\n    this._treeOutline.element.addEventListener(\n        'mouseout', /** @type {!EventListener} */ (this._onMouseMove.bind(this)), false);\n    this._treeOutline.element.addEventListener(\n        'contextmenu', /** @type {!EventListener} */ (this._onContextMenu.bind(this)), true);\n    UI.ARIAUtils.setAccessibleName(this._treeOutline.contentElement, i18nString(UIStrings.layersTreePane));\n\n    /** @type {?LayerTreeElement} */\n    this._lastHoveredNode = null;\n    this.element = this._treeOutline.element;\n    this._layerViewHost.showInternalLayersSetting().addChangeListener(this._update, this);\n  }\n\n  focus() {\n    this._treeOutline.focus();\n  }\n\n  /**\n   * @param {?Selection} selection\n   * @override\n   */\n  selectObject(selection) {\n    this.hoverObject(null);\n    const layer = selection && selection.layer();\n    const node = layer && layerToTreeElement.get(layer);\n    if (node) {\n      node.revealAndSelect(true);\n    } else if (this._treeOutline.selectedTreeElement) {\n      this._treeOutline.selectedTreeElement.deselect();\n    }\n  }\n\n  /**\n   * @param {?Selection} selection\n   * @override\n   */\n  hoverObject(selection) {\n    const layer = selection && selection.layer();\n    const node = layer && layerToTreeElement.get(layer);\n    if (node === this._lastHoveredNode) {\n      return;\n    }\n    if (this._lastHoveredNode) {\n      this._lastHoveredNode.setHovered(false);\n    }\n    if (node) {\n      node.setHovered(true);\n    }\n    this._lastHoveredNode = /** @type {!LayerTreeElement} */ (node);\n  }\n\n  /**\n   * @param {?SDK.LayerTreeBase.LayerTreeBase} layerTree\n   * @override\n   */\n  setLayerTree(layerTree) {\n    this._layerTree = layerTree;\n    this._update();\n  }\n\n  _update() {\n    const showInternalLayers = this._layerViewHost.showInternalLayersSetting().get();\n    const seenLayers = new Map();\n    /** @type {?SDK.LayerTreeBase.Layer} */\n    let root = null;\n    if (this._layerTree) {\n      if (!showInternalLayers) {\n        root = this._layerTree.contentRoot();\n      }\n      if (!root) {\n        root = this._layerTree.root();\n      }\n    }\n\n    /**\n     * @param {!SDK.LayerTreeBase.Layer} layer\n     * @this {LayerTreeOutline}\n     */\n    function updateLayer(layer) {\n      if (!layer.drawsContent() && !showInternalLayers) {\n        return;\n      }\n      if (seenLayers.get(layer)) {\n        console.assert(false, 'Duplicate layer: ' + layer.id());\n      }\n      seenLayers.set(layer, true);\n      /** @type {?LayerTreeElement} */\n      let node = layerToTreeElement.get(layer) || null;\n      let parentLayer = layer.parent();\n      // Skip till nearest visible ancestor.\n      while (parentLayer && parentLayer !== root && !parentLayer.drawsContent() && !showInternalLayers) {\n        parentLayer = parentLayer.parent();\n      }\n      const parent =\n          layer === root ? this._treeOutline.rootElement() : parentLayer && layerToTreeElement.get(parentLayer);\n      if (!parent) {\n        console.assert(false, 'Parent is not in the tree');\n        return;\n      }\n      if (!node) {\n        node = new LayerTreeElement(this, layer);\n        parent.appendChild(node);\n        // Expand all new non-content layers to expose content layers better.\n        if (!layer.drawsContent()) {\n          node.expand();\n        }\n      } else {\n        if (node.parent !== parent) {\n          const oldSelection = this._treeOutline.selectedTreeElement;\n          if (node.parent) {\n            node.parent.removeChild(node);\n          }\n          parent.appendChild(node);\n          if (oldSelection && oldSelection !== this._treeOutline.selectedTreeElement) {\n            oldSelection.select();\n          }\n        }\n        node._update();\n      }\n    }\n    if (root && this._layerTree) {\n      this._layerTree.forEachLayer(updateLayer.bind(this), root);\n    }\n    // Cleanup layers that don't exist anymore from tree.\n    const rootElement = this._treeOutline.rootElement();\n    for (let node = rootElement.firstChild(); node instanceof LayerTreeElement && !node.root;) {\n      if (seenLayers.get(node._layer)) {\n        node = node.traverseNextTreeElement(false);\n      } else {\n        const nextNode = node.nextSibling || node.parent;\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n        if (node === this._lastHoveredNode) {\n          this._lastHoveredNode = null;\n        }\n        node = nextNode;\n      }\n    }\n    if (!this._treeOutline.selectedTreeElement && this._layerTree) {\n      const elementToSelect = this._layerTree.contentRoot() || this._layerTree.root();\n      if (elementToSelect) {\n        const layer = layerToTreeElement.get(elementToSelect);\n        if (layer) {\n          layer.revealAndSelect(true);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {!MouseEvent} event\n   */\n  _onMouseMove(event) {\n    const node = /** @type {?LayerTreeElement} */ (this._treeOutline.treeElementFromEvent(event));\n    if (node === this._lastHoveredNode) {\n      return;\n    }\n    this._layerViewHost.hoverObject(this._selectionForNode(node));\n  }\n\n  /**\n   * @param {!LayerTreeElement} node\n   */\n  _selectedNodeChanged(node) {\n    this._layerViewHost.selectObject(this._selectionForNode(node));\n  }\n\n  /**\n   * @param {!MouseEvent} event\n   */\n  _onContextMenu(event) {\n    const selection =\n        this._selectionForNode(/** @type {?LayerTreeElement} */ (this._treeOutline.treeElementFromEvent(event)));\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    const layer = selection && selection.layer();\n    if (layer) {\n      this._layerSnapshotMap = this._layerViewHost.getLayerSnapshotMap();\n      if (this._layerSnapshotMap.has(layer)) {\n        contextMenu.defaultSection().appendItem(\n            i18nString(UIStrings.showPaintProfiler),\n            this.dispatchEventToListeners.bind(this, Events.PaintProfilerRequested, selection), false);\n      }\n    }\n    this._layerViewHost.showContextMenu(contextMenu, selection);\n  }\n\n  /**\n   * @param {?LayerTreeElement} node\n   * @return {?Selection}\n   */\n  _selectionForNode(node) {\n    return node && node._layer ? new LayerSelection(node._layer) : null;\n  }\n}\n\n/**\n * @enum {symbol}\n */\nexport const Events = {\n  PaintProfilerRequested: Symbol('PaintProfilerRequested')\n};\n\nexport class LayerTreeElement extends UI.TreeOutline.TreeElement {\n  /**\n   * @param {!LayerTreeOutline} tree\n   * @param {!SDK.LayerTreeBase.Layer} layer\n   */\n  constructor(tree, layer) {\n    super();\n    this._treeOutline = tree;\n    this._layer = layer;\n    layerToTreeElement.set(layer, this);\n    this._update();\n  }\n\n  _update() {\n    const node = this._layer.nodeForSelfOrAncestor();\n    const title = document.createDocumentFragment();\n    UI.UIUtils.createTextChild(title, node ? node.simpleSelector() : '#' + this._layer.id());\n    const details = title.createChild('span', 'dimmed');\n    details.textContent =\n        i18nString(UIStrings.updateChildDimension, {PH1: this._layer.width(), PH2: this._layer.height()});\n    this.title = title;\n  }\n\n  /**\n   * @override\n   * @return {boolean}\n   */\n  onselect() {\n    this._treeOutline._selectedNodeChanged(this);\n    return false;\n  }\n\n  /**\n   * @param {boolean} hovered\n   */\n  setHovered(hovered) {\n    this.listItemElement.classList.toggle('hovered', hovered);\n  }\n}\n\n/** @type {!WeakMap<!SDK.LayerTreeBase.Layer, !LayerTreeElement>} */\nexport const layerToTreeElement = new WeakMap();\n"]}