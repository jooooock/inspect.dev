{"version":3,"file":"SecurityModel.js","sourceRoot":"","sources":["../../../../../front_end/security/SecurityModel.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../i18n/i18n.js';\nimport * as SDK from '../sdk/sdk.js';\n\nexport const UIStrings = {\n  /**\n  *@description Text in Security Panel of the Security panel\n  */\n  theSecurityOfThisPageIsUnknown: 'The security of this page is unknown.',\n  /**\n  *@description Text in Security Panel of the Security panel\n  */\n  thisPageIsNotSecure: 'This page is not secure.',\n  /**\n  *@description Text in Security Panel of the Security panel\n  */\n  thisPageIsSecureValidHttps: 'This page is secure (valid HTTPS).',\n  /**\n  *@description Text in Security Panel of the Security panel\n  */\n  thisPageIsNotSecureBrokenHttps: 'This page is not secure (broken HTTPS).',\n  /**\n  *@description Description of an SSL cipher that contains a separate (bulk) cipher and MAC.\n  *@example {AES_256_CBC} PH1\n  *@example {HMAC-SHA1} PH2\n  */\n  cipherWithMAC: '{PH1} with {PH2}',\n  /**\n  *@description Description of an SSL Key and its Key Exchange Group.\n  *@example {ECDHE_RSA} PH1\n  *@example {X25519} PH2\n  */\n  keyExchangeWithGroup: '{PH1} with {PH2}',\n};\nconst str_ = i18n.i18n.registerUIStrings('security/SecurityModel.js', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class SecurityModel extends SDK.SDKModel.SDKModel {\n  /**\n   * @param {!SDK.SDKModel.Target} target\n   */\n  constructor(target) {\n    super(target);\n    this._dispatcher = new SecurityDispatcher(this);\n    this._securityAgent = target.securityAgent();\n    target.registerSecurityDispatcher(this._dispatcher);\n    this._securityAgent.invoke_enable();\n  }\n\n  /**\n   * @return {!SDK.ResourceTreeModel.ResourceTreeModel}\n   */\n  resourceTreeModel() {\n    return /** @type {!SDK.ResourceTreeModel.ResourceTreeModel} */ (\n        this.target().model(SDK.ResourceTreeModel.ResourceTreeModel));\n  }\n\n  /**\n   * @return {!SDK.NetworkManager.NetworkManager}\n   */\n  networkManager() {\n    return /** @type {!SDK.NetworkManager.NetworkManager} */ (this.target().model(SDK.NetworkManager.NetworkManager));\n  }\n\n  /**\n   * @param {?Protocol.Security.SecurityState} a\n   * @param {?Protocol.Security.SecurityState} b\n   * @return {number}\n   */\n  static SecurityStateComparator(a, b) {\n    const securityStateMap = getOrCreateSecurityStateOrdinalMap();\n    const aScore = a && securityStateMap.get(a) || 0;\n    const bScore = b && securityStateMap.get(b) || 0;\n\n    return aScore - bScore;\n  }\n}\n/** @type {?Map<!Protocol.Security.SecurityState, number>} */\nlet securityStateToOrdinal = null;\n\n/**\n * @return {!Map<!Protocol.Security.SecurityState, number>}\n */\nconst getOrCreateSecurityStateOrdinalMap = () => {\n  if (!securityStateToOrdinal) {\n    securityStateToOrdinal = new Map();\n    const ordering = [\n      Protocol.Security.SecurityState.Info, Protocol.Security.SecurityState.InsecureBroken,\n      Protocol.Security.SecurityState.Insecure, Protocol.Security.SecurityState.Neutral,\n      Protocol.Security.SecurityState.Secure,\n      // Unknown is max so that failed/cancelled requests don't overwrite the origin security state for successful requests,\n      // and so that failed/cancelled requests appear at the bottom of the origins list.\n      Protocol.Security.SecurityState.Unknown\n    ];\n    for (let i = 0; i < ordering.length; i++) {\n      securityStateToOrdinal.set(ordering[i], i + 1);\n    }\n  }\n  return securityStateToOrdinal;\n};\n\nSDK.SDKModel.SDKModel.register(SecurityModel, SDK.SDKModel.Capability.Security, false);\n\n/** @enum {symbol} */\nexport const Events = {\n  SecurityStateChanged: Symbol('SecurityStateChanged'),\n  VisibleSecurityStateChanged: Symbol('VisibleSecurityStateChanged')\n};\n\n/** @type {!Object<string, string>} */\nexport const SummaryMessages = {\n  [Protocol.Security.SecurityState.Unknown]: i18nString(UIStrings.theSecurityOfThisPageIsUnknown),\n  [Protocol.Security.SecurityState.Insecure]: i18nString(UIStrings.thisPageIsNotSecure),\n  [Protocol.Security.SecurityState.Neutral]: i18nString(UIStrings.thisPageIsNotSecure),\n  [Protocol.Security.SecurityState.Secure]: i18nString(UIStrings.thisPageIsSecureValidHttps),\n  [Protocol.Security.SecurityState.InsecureBroken]: i18nString(UIStrings.thisPageIsNotSecureBrokenHttps)\n};\n\n\nexport class PageSecurityState {\n  /**\n   * @param {!Protocol.Security.SecurityState} securityState\n   * @param {!Array<!Protocol.Security.SecurityStateExplanation>} explanations\n   * @param {?string} summary\n   */\n  constructor(securityState, explanations, summary) {\n    this.securityState = securityState;\n    this.explanations = explanations;\n    this.summary = summary;\n  }\n}\n\nexport class PageVisibleSecurityState {\n  /**\n   * @param {!Protocol.Security.SecurityState} securityState\n   * @param {?Protocol.Security.CertificateSecurityState} certificateSecurityState\n   * @param {?Protocol.Security.SafetyTipInfo} safetyTipInfo\n   * @param {!Array<string>} securityStateIssueIds\n   */\n  constructor(securityState, certificateSecurityState, safetyTipInfo, securityStateIssueIds) {\n    this.securityState = securityState;\n    this.certificateSecurityState =\n        certificateSecurityState ? new CertificateSecurityState(certificateSecurityState) : null;\n    this.safetyTipInfo = safetyTipInfo ? new SafetyTipInfo(safetyTipInfo) : null;\n    this.securityStateIssueIds = securityStateIssueIds;\n  }\n}\n\nexport class CertificateSecurityState {\n  /**\n   * @param {!Protocol.Security.CertificateSecurityState} certificateSecurityState\n   */\n  constructor(certificateSecurityState) {\n    /** @type {string} */\n    this.protocol = certificateSecurityState.protocol;\n    /** @type {string} */\n    this.keyExchange = certificateSecurityState.keyExchange;\n    /** @type {?string} */\n    this.keyExchangeGroup = certificateSecurityState.keyExchangeGroup || null;\n    /** @type {string} */\n    this.cipher = certificateSecurityState.cipher;\n    /** @type {?string} */\n    this.mac = certificateSecurityState.mac || null;\n    /** @type {!Array<string>} */\n    this.certificate = certificateSecurityState.certificate;\n    /** @type {string} */\n    this.subjectName = certificateSecurityState.subjectName;\n    /** @type {string} */\n    this.issuer = certificateSecurityState.issuer;\n    /** @type {!Protocol.Network.TimeSinceEpoch} */\n    this.validFrom = certificateSecurityState.validFrom;\n    /** @type {!Protocol.Network.TimeSinceEpoch} */\n    this.validTo = certificateSecurityState.validTo;\n    /** @type {?string} */\n    this.certificateNetworkError = certificateSecurityState.certificateNetworkError || null;\n    /** @type {boolean} */\n    this.certificateHasWeakSignature = certificateSecurityState.certificateHasWeakSignature;\n    /** @type {boolean} */\n    this.certificateHasSha1Signature = certificateSecurityState.certificateHasSha1Signature;\n    /** @type {boolean} */\n    this.modernSSL = certificateSecurityState.modernSSL;\n    /** @type {boolean} */\n    this.obsoleteSslProtocol = certificateSecurityState.obsoleteSslProtocol;\n    /** @type {boolean} */\n    this.obsoleteSslKeyExchange = certificateSecurityState.obsoleteSslKeyExchange;\n    /** @type {boolean} */\n    this.obsoleteSslCipher = certificateSecurityState.obsoleteSslCipher;\n    /** @type {boolean} */\n    this.obsoleteSslSignature = certificateSecurityState.obsoleteSslSignature;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCertificateExpiringSoon() {\n    const expiryDate = new Date(this.validTo * 1000).getTime();\n    return (expiryDate < new Date(Date.now()).setHours(48)) && (expiryDate > Date.now());\n  }\n\n  /**\n   * @return {string}\n   */\n  getKeyExchangeName() {\n    if (this.keyExchangeGroup) {\n      return this.keyExchange ?\n          i18nString(UIStrings.keyExchangeWithGroup, {PH1: this.keyExchange, PH2: this.keyExchangeGroup}) :\n          this.keyExchangeGroup;\n    }\n    return this.keyExchange;\n  }\n\n  /**\n   * @return {string}\n   */\n  getCipherFullName() {\n    return this.mac ? i18nString(UIStrings.cipherWithMAC, {PH1: this.cipher, PH2: this.mac}) : this.cipher;\n  }\n}\n\nclass SafetyTipInfo {\n  /**\n   * @param {!Protocol.Security.SafetyTipInfo} safetyTipInfo\n   */\n  constructor(safetyTipInfo) {\n    /** @type {string} */\n    this.safetyTipStatus = safetyTipInfo.safetyTipStatus;\n    /** @type {?string} */\n    this.safeUrl = safetyTipInfo.safeUrl || null;\n  }\n}\n\nexport class SecurityStyleExplanation {\n  /**\n   * @param {!Protocol.Security.SecurityState} securityState\n   * @param {string|undefined} title\n   * @param {string} summary\n   * @param {string} description\n   * @param {!Array<string>=} certificate\n   * @param {!Protocol.Security.MixedContentType=} mixedContentType\n   * @param {!Array<string>=} recommendations\n   */\n  constructor(\n      securityState, title, summary, description, certificate = [],\n      mixedContentType = Protocol.Security.MixedContentType.None, recommendations = []) {\n    this.securityState = securityState;\n    this.title = title;\n    this.summary = summary;\n    this.description = description;\n    this.certificate = certificate;\n    this.mixedContentType = mixedContentType;\n    this.recommendations = recommendations;\n  }\n}\n\n/**\n * @implements {ProtocolProxyApi.SecurityDispatcher}\n */\nclass SecurityDispatcher {\n  /**\n   * @param {!SecurityModel} model\n   */\n  constructor(model) {\n    this._model = model;\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Security.SecurityStateChangedEvent} event\n   */\n  securityStateChanged({securityState, schemeIsCryptographic, explanations, insecureContentStatus, summary}) {\n    const pageSecurityState = new PageSecurityState(securityState, explanations, summary || null);\n    this._model.dispatchEventToListeners(Events.SecurityStateChanged, pageSecurityState);\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Security.VisibleSecurityStateChangedEvent} event\n   */\n  visibleSecurityStateChanged({visibleSecurityState}) {\n    const pageVisibleSecurityState = new PageVisibleSecurityState(\n        visibleSecurityState.securityState, visibleSecurityState.certificateSecurityState || null,\n        visibleSecurityState.safetyTipInfo || null, visibleSecurityState.securityStateIssueIds);\n    this._model.dispatchEventToListeners(Events.VisibleSecurityStateChanged, pageVisibleSecurityState);\n  }\n\n  /**\n   * @override\n   * @param {!Protocol.Security.CertificateErrorEvent} event\n   */\n  certificateError({eventId, errorType, requestURL}) {\n  }\n}\n"]}