{"version":3,"file":"ReportView.js","sourceRoot":"","sources":["../../../../../../front_end/ui/components/ReportView.ts"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,OAAO,MAAM,wCAAwC,CAAC;AAElE;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;AACH,MAAM,OAAO,MAAO,SAAQ,WAAW;IAAvC;;QACmB,WAAM,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAuB9D,CAAC;IArBC,iBAAiB;QACf,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEO,MAAM;QACZ,qDAAqD;QACrD,mBAAmB;QACnB,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAA;;;;;;;;;;;KAW1B,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAChB,kBAAkB;IACpB,CAAC;CACF;AAMD;;;;;GAKG;AACH,MAAM,OAAO,aAAc,SAAQ,WAAW;IAA9C;;QACmB,WAAM,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;QACpD,iBAAY,GAAW,EAAE,CAAC;IAsCpC,CAAC;IApCC,IAAI,IAAI,CAAC,EAAC,YAAY,EAAoB;QACxC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEO,MAAM;QACZ,qDAAqD;QACrD,mBAAmB;QACnB,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;8BAsBD,IAAI,CAAC,YAAY;;;KAG1C,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAChB,kBAAkB;IACpB,CAAC;CACF;AAED;;;;;;;;;;GAUG;AACH,MAAM,OAAO,SAAU,SAAQ,WAAW;IAA1C;;QACmB,WAAM,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAsC9D,CAAC;IApCC,iBAAiB;QACf,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEO,MAAM;QACZ,qDAAqD;QACrD,mBAAmB;QACnB,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;KA0B1B,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAChB,kBAAkB;IACpB,CAAC;CACF;AAED,cAAc,CAAC,MAAM,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;AACjD,cAAc,CAAC,MAAM,CAAC,yBAAyB,EAAE,aAAa,CAAC,CAAC;AAChE,cAAc,CAAC,MAAM,CAAC,qBAAqB,EAAE,SAAS,CAAC,CAAC","sourcesContent":["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as LitHtml from '../../third_party/lit-html/lit-html.js';\n\n/**\n * The `Report` component can be used to display static information. A report\n * usually consists of multiple sections where each section has rows of name/value\n * pairs. The exact structure of a report is determined by the user, as is the\n * rendering and content of the individual name/value pairs.\n *\n * Example (without the data setters):\n * ```\n *   <devtools-report>\n *     <devtools-report-section>\n *       <devtools-report-row>\n *         <span slot=\"name\">Name (rendered in the left column)</span>\n *         <span slot=\"value\">Value (rendered in the right column)</span>\n *       </devtools-report-row>\n  *       <devtools-report-row>\n *         <span slot=\"name\" class=\"foo\">Name (with custom styling)</span>\n *         <span slot=\"value\">Some Value</span>\n *       </devtools-report-row>\n *     </devtools-report-section>\n *   </devtools-report>\n * ```\n * The component is intended to replace UI.ReportView in an idiomatic way.\n *\n * CSS variables to control the behavior of the component:\n *\n *   `--name-column-width`: The width of the left hand side column.\n */\nexport class Report extends HTMLElement {\n  private readonly shadow = this.attachShadow({mode: 'open'});\n\n  connectedCallback(): void {\n    this.render();\n  }\n\n  private render(): void {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    LitHtml.render(LitHtml.html`\n      <style>\n        .content {\n          background-color:  var(--color-background);\n          overflow: auto;\n        }\n      </style>\n\n      <div class=\"content\">\n        <slot></slot>\n      </div>\n    `, this.shadow);\n    // clang-format on\n  }\n}\n\nexport interface ReportSectionData {\n  sectionTitle: string;\n}\n\n/**\n * Each report consists of an arbirtray number of sections.\n *\n * Semantically, each section is a <dl> with each row beeing\n * a pair of <dt> and <dd>.\n */\nexport class ReportSection extends HTMLElement {\n  private readonly shadow = this.attachShadow({mode: 'open'});\n  private sectionTitle: string = '';\n\n  set data({sectionTitle}: ReportSectionData) {\n    this.sectionTitle = sectionTitle;\n    this.render();\n  }\n\n  private render(): void {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    LitHtml.render(LitHtml.html`\n      <style>\n        .section {\n          display: flex;\n          padding: 12px;\n          border-bottom: 1px solid var(--color-details-hairline);\n          flex-direction: column;\n        }\n\n        .header {\n          margin-left: 18px;\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          flex: auto;\n          text-overflow: ellipsis;\n          overflow: hidden;\n          font-weight: bold;\n          color: var(--color-text-primary);\n        }\n      </style>\n      <div class=\"section\">\n        <div class=\"header\">${this.sectionTitle}</div>\n        <dl><slot></slot></dl>\n      </div>\n    `, this.shadow);\n    // clang-format on\n  }\n}\n\n/**\n * Each report section can consist of arbitrary many `ReportRow`s.\n *\n * ReportRows have two slots that the user provides:\n *   - \"name\": Element for the left hand side column.\n *   - \"value\": Element for the right hand side column.\n *\n * Please note that both slots can be filled with arbitrary elements.\n * These can be either plain HTML, other custom elements or a combination\n * thereof.\n */\nexport class ReportRow extends HTMLElement {\n  private readonly shadow = this.attachShadow({mode: 'open'});\n\n  connectedCallback(): void {\n    this.render();\n  }\n\n  private render(): void {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    LitHtml.render(LitHtml.html`\n      <style>\n        :host {\n          display: flex;\n          line-height: 28px;\n          margin: 8px 0px 0px 0px;\n        }\n\n        .name {\n          color: var(--color-text-secondary);\n          flex: 0 0 var(--name-column-width, 128px);\n          padding: 0 6px;\n          text-align: right;\n          white-space: pre;\n        }\n\n        .value {\n          color: var(--color-text-primary);\n          flex: auto;\n          margin-inline-start: 0px;\n          padding: 0 6px;\n          white-space: pre;\n        }\n      </style>\n      <dt class=\"name\"><slot name=\"name\"></slot></dt>\n      <dd class=\"value\"><slot name=\"value\"></slot></dd>\n    `, this.shadow);\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-report', Report);\ncustomElements.define('devtools-report-section', ReportSection);\ncustomElements.define('devtools-report-row', ReportRow);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-report': Report;\n    'devtools-report-section': ReportSection;\n    'devtools-report-row': ReportRow;\n  }\n}\n"]}