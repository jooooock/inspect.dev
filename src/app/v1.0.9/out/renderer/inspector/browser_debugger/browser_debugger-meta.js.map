{"version":3,"file":"browser_debugger-meta.js","sourceRoot":"","sources":["../../../../../front_end/browser_debugger/browser_debugger-meta.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {ls} from '../platform/platform.js';\nimport * as Root from '../root/root.js';\nimport * as UI from '../ui/ui.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as BrowserDebugger from './browser_debugger.js';\n\nlet loadedBrowserDebuggerModule: (typeof BrowserDebugger|undefined);\n\nasync function loadBrowserDebuggerModule(): Promise<typeof BrowserDebugger> {\n  if (!loadedBrowserDebuggerModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('browser_debugger');\n    loadedBrowserDebuggerModule = await import('./browser_debugger.js');\n  }\n  return loadedBrowserDebuggerModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  async loadView() {\n    const BrowserDebugger = await loadBrowserDebuggerModule();\n    return BrowserDebugger.EventListenerBreakpointsSidebarPane.EventListenerBreakpointsSidebarPane.instance();\n  },\n  id: 'sources.eventListenerBreakpoints',\n  location: UI.ViewManager.ViewLocationValues.SOURCES_SIDEBAR_BOTTOM,\n  commandPrompt: 'Show Elements',\n  title: ls`Event Listener Breakpoints`,\n  order: 9,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n});\n\nUI.ViewManager.registerViewExtension({\n  async loadView() {\n    const BrowserDebugger = await loadBrowserDebuggerModule();\n    return BrowserDebugger.CSPViolationBreakpointsSidebarPane.CSPViolationBreakpointsSidebarPane.instance();\n  },\n  id: 'sources.cspViolationBreakpoints',\n  location: UI.ViewManager.ViewLocationValues.SOURCES_SIDEBAR_BOTTOM,\n  commandPrompt: 'Show CSP Violation Breakpoints',\n  title: ls`CSP Violation Breakpoints`,\n  order: 10,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n});\n\nUI.ViewManager.registerViewExtension({\n  async loadView() {\n    const BrowserDebugger = await loadBrowserDebuggerModule();\n    return BrowserDebugger.XHRBreakpointsSidebarPane.XHRBreakpointsSidebarPane.instance();\n  },\n  id: 'sources.xhrBreakpoints',\n  location: UI.ViewManager.ViewLocationValues.SOURCES_SIDEBAR_BOTTOM,\n  commandPrompt: 'Show XHR/fetch Breakpoints',\n  title: ls`XHR/fetch Breakpoints`,\n  order: 5,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  hasToolbar: true,\n});\n\nUI.ViewManager.registerViewExtension({\n  async loadView() {\n    const BrowserDebugger = await loadBrowserDebuggerModule();\n    return BrowserDebugger.DOMBreakpointsSidebarPane.DOMBreakpointsSidebarPane.instance();\n  },\n  id: 'sources.domBreakpoints',\n  location: UI.ViewManager.ViewLocationValues.SOURCES_SIDEBAR_BOTTOM,\n  commandPrompt: 'Show DOM Breakpoints',\n  title: ls`DOM Breakpoints`,\n  order: 7,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n});\n\nUI.ViewManager.registerViewExtension({\n  async loadView() {\n    const BrowserDebugger = await loadBrowserDebuggerModule();\n    return BrowserDebugger.ObjectEventListenersSidebarPane.ObjectEventListenersSidebarPane.instance();\n  },\n  id: 'sources.globalListeners',\n  location: UI.ViewManager.ViewLocationValues.SOURCES_SIDEBAR_BOTTOM,\n  commandPrompt: 'Show Global Listeners',\n  title: ls`Global Listeners`,\n  order: 8,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  hasToolbar: true,\n});\n\nUI.ViewManager.registerViewExtension({\n  async loadView() {\n    const BrowserDebugger = await loadBrowserDebuggerModule();\n    return BrowserDebugger.DOMBreakpointsSidebarPane.DOMBreakpointsSidebarPane.instance();\n  },\n  id: 'elements.domBreakpoints',\n  location: UI.ViewManager.ViewLocationValues.ELEMENTS_SIDEBAR,\n  commandPrompt: 'Show DOM Breakpoints',\n  title: ls`DOM Breakpoints`,\n  order: 6,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n});\n"]}